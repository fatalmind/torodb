<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.torodb.server</groupId>
        <artifactId>server-pom</artifactId>
        <version>0.50.1-SNAPSHOT</version>
    </parent>

    <artifactId>server-main</artifactId>

    <name>ToroDB: Server main</name>
    <description>ToroDB Server main project. Contains executable class and CLI parsing.</description>

    <properties>
        <profiles.resources>src/main/profiles/dev</profiles.resources>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.torodb.engine</groupId>
            <artifactId>packaging-utils</artifactId>
        </dependency>
        <dependency>
            <groupId>com.torodb.engine.backend</groupId>
            <artifactId>backend-postgresql</artifactId>
        </dependency>
        <dependency>
            <groupId>com.torodb.engine.backend</groupId>
            <artifactId>backend-derby</artifactId>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>server-service</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.json</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
        </dependency>
        <dependency>
            <groupId>com.beust</groupId>
            <artifactId>jcommander</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-xml</artifactId>
        </dependency>
        <dependency>
            <groupId>org.codehaus.woodstox</groupId>
            <artifactId>woodstox-core-asl</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-yaml</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.el</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-configuration</groupId>
            <artifactId>commons-configuration</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
        </dependency>
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-slf4j_2.12</artifactId>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>integration-tests</id>
                            <phase>integration-test</phase>
                            <configuration>
                                <systemProperties>
                                    <torodbIntegrationConfigYml>${torodbIntegrationConfigYml}</torodbIntegrationConfigYml>
                                </systemProperties>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>${profiles.resources}</directory>
            </resource>
        </resources>
    </build>
    
    <profiles>
        <profile>
            <id>assembler</id>
            <properties>
                <profile.assembler>true</profile.assembler>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <version>2.2-beta-5</version>
                        <configuration>
                            <descriptors>
                                <descriptor>src/main/assembly/assembly.xml</descriptor>
                            </descriptors>
                            <finalName>torodb-${project.version}</finalName>
                            <outputDirectory>${project.build.directory}/dist</outputDirectory>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>assembly</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>appassembler-maven-plugin</artifactId>
                        <version>1.10</version>
                        <configuration>
                            <programs>
                                <program>
                                    <mainClass>com.torodb.standalone.Main</mainClass>
                                    <id>torodb</id>
                                </program>
                            </programs>
                        </configuration>
                        <executions>
                            <execution>
                                <id>assemble</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>assemble</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <profile>
            <id>docker</id>
            <properties>
                <docker.javaimage>java:8-jre</docker.javaimage>
                <docker.postgres.password>postgres</docker.postgres.password>
                <docker.torodb.password>torodb</docker.torodb.password>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>appassembler-maven-plugin</artifactId>
                        <version>1.10</version>
                        <configuration>
                            <programs>
                                <program>
                                    <mainClass>com.torodb.standalone.Main</mainClass>
                                    <id>torodb</id>
                                </program>
                            </programs>
                        </configuration>
                        <executions>
                            <execution>
                                <id>assemble</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>assemble</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <extensions>true</extensions>
                        <executions>
                            <execution>
                                <id>docker-base</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>build-nofork</goal>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                    <images>
                                        <image>
                                            <name>torodb-base</name>
                                            <build>
                                                <from>${docker.javaimage}</from>
                                                <cleanup>try</cleanup>
                                                <optimise>true</optimise>
                                                <runCmds>
                                                    <run>apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv D68FA50FEA312927</run>
                                                    <run>echo "deb http://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.2 multiverse" > /etc/apt/sources.list.d/mongodb-org-3.2.list</run>
                                                    <run>apt-get update</run>
                                                    <run>apt-get -y install netcat postgresql-client python-pip mongodb-org-shell mongodb-org-tools</run>
                                                    <run>pip install awscli</run>
                                                    <run>apt-get clean</run>
                                                    <run>rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*</run>
                                                </runCmds>
                                            </build>
                                            <run>
                                                <wait>
                                                    <log>base image generated</log>
                                                </wait>
                                                <cmd>
                                                    <arg>/bin/bash</arg>
                                                    <arg>-c</arg>
                                                    <arg>
                                                    &gt; generated;
                                                    echo base image generated;
                                                    </arg>
                                                </cmd>
                                            </run>
                                        </image>
                                    </images>
                                </configuration>
                            </execution>
                            <execution>
                                <id>docker-build</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>build-nofork</goal>
                                </goals>
                                <configuration>
                                    <images>
                                        <image>
                                            <alias>postgres</alias>
                                            <name>postgres:9.5</name>
                                            <run>
                                                <env>
                                                    <POSTGRES_PASSWORD>${docker.postgres.password}</POSTGRES_PASSWORD>
                                                </env>
                                                <ports>
                                                    <port>15432:5432</port>
                                                </ports>
                                                <log>
                                                    <prefix>postgres</prefix>
                                                    <enabled>true</enabled>
                                                    <color>blue</color>
                                                </log>
                                            </run>
                                        </image>
                                        <image>
                                            <alias>torodb</alias>
                                            <name>torodb/server</name>
                                            <build>
                                                <from>torodb-base</from>
                                                <tags>
                                                    <tag>${project.version}</tag>
                                                </tags>
                                                <assembly>
                                                    <mode>dir</mode>
                                                    <descriptor>assembly.xml</descriptor>
                                                </assembly>
                                            </build>
                                            <run>
                                                <env>
                                                    <POSTGRES_PASSWORD>${docker.postgres.password}</POSTGRES_PASSWORD>
                                                    <TORODB_PASSWORD>${docker.torodb.password}</TORODB_PASSWORD>
                                                </env>
                                                <links>
                                                    <link>postgres:postgres</link>
                                                </links>
                                                <ports>
                                                    <port>27018:27018</port>
                                                </ports>
                                                <log>
                                                    <prefix>torodb</prefix>
                                                    <enabled>true</enabled>
                                                    <color>white</color>
                                                </log>
                                                <workingDir>/maven</workingDir>
                                                <cmd>./run-postgres.sh</cmd>
                                            </run>
                                        </image>
                                    </images>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>prod</id>
            <properties>
                <profiles.resources>src/main/profiles/prod</profiles.resources>
            </properties>
        </profile>

    </profiles>

</project>
